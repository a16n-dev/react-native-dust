import { writeFileSync, mkdirSync, existsSync } from 'fs';
import { resolve, dirname } from 'path';
import prettier from 'prettier';

export function setupUIDir(): string {
  const packageRoot = findPackageRoot(__dirname);
  const uiDir = resolve(packageRoot, 'ui');

  // Ensure ui directory exists
  mkdirSync(uiDir, { recursive: true });

  return uiDir;
}

export async function writeUIFile(filename: string, content: string): Promise<void> {
  const uiDir = setupUIDir();
  const filePath = resolve(uiDir, filename);
  
  const header = `// Generated by Duck CLI
// This file is auto-generated - do not edit manually

`;
  
  const contentWithHeader = header + content;
  
  const formattedContent = await prettier.format(contentWithHeader, {
    filepath: filePath,
    parser: getParserForFile(filename)
  });
  
  writeFileSync(filePath, formattedContent);
}

function getParserForFile(filename: string): string {
  const ext = filename.split('.').pop()?.toLowerCase();
  switch (ext) {
    case 'js':
    case 'jsx':
      return 'babel';
    case 'ts':
    case 'tsx':
      return 'typescript';
    case 'json':
      return 'json';
    default:
      return 'babel';
  }
}

function findPackageRoot(startDir: string): string {
  let currentDir = startDir;
  while (currentDir !== dirname(currentDir)) {
    if (existsSync(resolve(currentDir, 'package.json'))) {
      return currentDir;
    }
    currentDir = dirname(currentDir);
  }
  throw new Error('Could not find package.json');
}