export type DustTheme = {
  colors: Record<string, Record<string, string>>;
  spacing: Record<string, number>;
  radius: Record<string, number>;
  shadow: Record<string, string>;
  text: Record<
    string,
    {
      fontSize: number;
      lineHeight?: number;
      letterSpacing?: number;
    }
  >;
  [key: string]: any;
  extend?: never;
};

export type Config = {
  /**
   * An array of glob patterns or directory paths to include in the code generation process.
   * These patterns determine which files will be scanned for token usage by `dust build`
   */
  include: string[];
  theme: DustTheme;
  breakpoints?: Record<string, number>;
  options?: {
    /**
     * If true, will generate a set of web-only tokens, such as web_fixed.
     */
    targetsWeb?: boolean;
    /**
     * Determines the mode for the generated styles. Defaults to 'vanilla'.
     * - 'vanilla': Single theme support, plain stylesheet output, no runtime dependencies
     * - 'unistyles': Multiple themes support, safe area margin/padding utility classes. Requires unistyles.
     */
    mode?: 'vanilla' | 'unistyles';
    /**
     * Specify tokens that should always be generated by `dust build`, even if they are not used in the codebase.
     * Can be specified as an array of token strings, or regular expressions as strings.
     */
    tokenAllowList?: string[];
    /**
     * Specify tokens that should never be generated by `dust build`. Use this if you want to exclude certain
     * default tokens.
     */
    tokenBlockList?: string[];
    /**
     * Generate a set of utility helper functions for platform-specific code such as `isIOS`, `android()`
     * Defaults to true
     */
    generatePlatformHelpers?: boolean;
  };
};
